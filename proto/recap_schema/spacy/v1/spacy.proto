syntax = "proto3";

package recap_schema.spacy.v1;
import "recap_schema/base/v1/base.proto";

service SpacyService {
    rpc DocBin (DocBinRequest) returns (DocBinResponse);
    rpc Vector (VectorRequest) returns (VectorResponse);
}

message DocBinRequest {
    recap_schema.base.v1.Language language = 1;
    repeated string texts = 2;
    string spacy_model = 3;
    repeated string attributes = 4;
    repeated EmbeddingLevel embedding_levels = 5;
    repeated EmbeddingModel embedding_models = 6;
}

message DocBinResponse {
    bytes docbin = 1;
}

message VectorRequest {
    recap_schema.base.v1.Language language = 1;
    repeated string texts = 2;
    string spacy_model = 3;
    repeated EmbeddingLevel embedding_levels = 4;
    repeated EmbeddingModel embedding_models = 5;
}

message VectorResponse {
    Vector document = 1;
    repeated Vector tokens = 2;
    repeated Vector sentences = 3;
}

message Vector {
    repeated double vector = 1;
}

enum EmbeddingLevel {
    EMBEDDING_LEVEL_UNSPECIFIED = 0;
    EMBEDDING_LEVEL_DOCUMENT = 1;
    EMBEDDING_LEVEL_TOKENS = 2;
    EMBEDDING_LEVEL_SENTENCES = 3;
}

message EmbeddingModel {
    EmbeddingType model_type = 1;
    string model_name = 2;
    Pooling pooling = 3;
}

enum Pooling {
    POOLING_UNSPECIFIED = 0;
    POOLING_MEAN = 1;
    POOLING_MAX = 2;
    POOLING_MIN = 3;
    POOLING_SUM = 4;
    POOLING_FIRST = 5;
    POOLING_LAST = 6;
}

enum EmbeddingType {
    EMBEDDING_TYPE_UNSPECIFIED = 0;
    EMBEDDING_TYPE_SPACY = 1;
    EMBEDDING_TYPE_USE = 2;
    EMBEDDING_TYPE_SBERT = 3;
}
