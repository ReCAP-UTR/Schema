syntax = "proto3";

package arg_services.retrieval.v1;
option java_package = "de.uni_trier.recap.arg_services.retrieval.v1";
import "arg_services/graph/v1/graph.proto";
import "arg_services/nlp/v1/nlp.proto";

service RetrievalService {
  rpc Retrieve (RetrieveRequest) returns (RetrieveResponse);
}

message RetrieveRequest {
  map<string, arg_services.graph.v1.Graph> cases = 1;
  oneof query {
    arg_services.graph.v1.Graph query_graph = 2;
    string query_text = 3;
  }
  arg_services.nlp.v1.NlpConfig nlp_config = 4;
  int32 limit = 5;
  bool mac_phase = 6;
  bool fac_phase = 7;
  MappingAlgorithm mapping_algorithm = 8;
  bool use_scheme_ontology = 9;
  bool enforce_scheme_types = 10;
  bool return_all_similarities = 15;
}

enum MappingAlgorithm {
  MAPPING_ALGORITHM_UNSPECIFIED = 0;
  MAPPING_ALGORITHM_ASTAR = 1;
}

message RetrieveResponse {
  repeated string ranking = 1;
  map<string, double> similarities = 2;
  map<string, double> mac_similarities = 3;
  map<string, double> fac_similarities = 4;
}
