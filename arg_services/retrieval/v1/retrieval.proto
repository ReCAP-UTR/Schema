syntax = "proto3";

package arg_services.retrieval.v1;

import "arg_services/graph/v1/graph.proto";
import "arg_services/nlp/v1/nlp.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";

service RetrievalService {
  rpc Retrieve (RetrieveRequest) returns (RetrieveResponse) {
        option (google.api.http) = {
            post: "/retrieval/v1/retrieve"
            body: "*"
        };
    }
}

message RetrieveRequest {
  map<string, arg_services.graph.v1.Graph> case_graphs = 1;
  repeated string casebase_names = 2;
  oneof query {
    arg_services.graph.v1.Graph query_graph = 3;
    string query_text = 4;
  }
  arg_services.nlp.v1.NlpConfig nlp_config = 5;
  int32 limit = 6;
  bool semantic_retrieval = 7;
  bool structural_retrieval = 8;
  // Implementation-specific information can be encoded here
  google.protobuf.Struct extras = 15;
}

message RetrieveResponse {
  repeated RetrievedCase semantic_ranking = 1;
  repeated RetrievedCase structural_ranking = 2;
  repeated RetrievedMapping structural_mapping = 3;
  // Implementation-specific information can be encoded here
  google.protobuf.Struct extras = 15;
}

message RetrievedCase {
  string id = 1;
  double similarity = 2;
}

message RetrievedMapping {
  RetrievedCase case = 1;
  repeated Mapping node_mappings = 2;
}

message Mapping {
  string query_id = 1;
  string case_id = 2;
  double similarity = 3;
}
